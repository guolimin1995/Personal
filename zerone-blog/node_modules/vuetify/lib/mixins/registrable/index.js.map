{"version":3,"sources":["../../../src/mixins/registrable/index.ts"],"names":[],"mappings":";;AAAA,OAAO,GAAP,MAAgB,KAAhB;AAEA,SAAS,WAAT,QAA4B,oBAA5B;AAEA,SAAS,eAAT,CAA0B,KAA1B,EAAyC,MAAzC,EAAuD;AACrD,WAAO;AAAA,eAAM,qBAAmB,KAAnB,yCAA4D,MAA5D,CAAN;AAAA,KAAP;AACD;AASD,OAAM,SAAU,MAAV,CAEH,SAFG,EAEW,KAFX,EAE2B,MAF3B,EAE0C;AAC9C,QAAM,cAAc,SAAS,MAAT,GAAkB;AACpC,kBAAU,gBAAgB,KAAhB,EAAuB,MAAvB,CAD0B;AAEpC,oBAAY,gBAAgB,KAAhB,EAAuB,MAAvB;AAFwB,KAAlB,GAGhB,IAHJ;AAKA,WAAO,IAAI,MAAJ,CAAW;AAChB,cAAM,oBADU;AAGhB,oCACG,SADH,EACe;AACX,qBAAS;AADE,SADf;AAHgB,KAAX,CAAP;AASD;AAED,OAAM,SAAU,OAAV,CAAmB,SAAnB,EAAkD;AAAA,QAAZ,IAAY,uEAAL,KAAK;;AACtD,WAAO,IAAI,MAAJ,CAAW;AAChB,cAAM,qBADU;AAGhB,iBAAS,OAAO,EAAP,GAAY;AACnB,sBAAU,IADS;AAEnB,wBAAY;AAFO,SAHL;AAOhB,eAPgB,qBAOT;AACL,uCACG,SADH,EACe,OAAO,IAAP,GAAc;AACzB,0BAAU,KAAK,QADU;AAEzB,4BAAY,KAAK;AAFQ,aAD7B;AAMD;AAde,KAAX,CAAP;AAgBD","sourcesContent":["import Vue from 'vue'\nimport { VueConstructor } from 'vue/types/vue'\nimport { consoleWarn } from '../../util/console'\n\nfunction generateWarning (child: string, parent: string) {\n  return () => consoleWarn(`The ${child} component must be used inside a ${parent}`)\n}\n\nexport type Registrable<T extends string, C extends VueConstructor | null = null> = VueConstructor<Vue & {\n  [K in T]: C extends VueConstructor ? InstanceType<C> : {\n    register (...props: any[]): void\n    unregister (self: any): void\n  }\n}>\n\nexport function inject<\n  T extends string, C extends VueConstructor | null = null\n> (namespace: T, child?: string, parent?: string): Registrable<T, C> {\n  const defaultImpl = child && parent ? {\n    register: generateWarning(child, parent),\n    unregister: generateWarning(child, parent),\n  } : null\n\n  return Vue.extend({\n    name: 'registrable-inject',\n\n    inject: {\n      [namespace]: {\n        default: defaultImpl,\n      },\n    },\n  })\n}\n\nexport function provide (namespace: string, self = false) {\n  return Vue.extend({\n    name: 'registrable-provide',\n\n    methods: self ? {} : {\n      register: null,\n      unregister: null,\n    },\n    provide (): object {\n      return {\n        [namespace]: self ? this : {\n          register: this.register,\n          unregister: this.unregister,\n        },\n      }\n    },\n  })\n}\n"],"sourceRoot":""}