{"version":3,"sources":["../../../../src/components/VColorPicker/util/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Utilities\nimport {\n  HSVA,\n  HSVAtoRGBA,\n  HSVAtoHex,\n  RGBA,\n  Hex,\n  RGBAtoHSVA,\n  HexToHSVA,\n  HSLA,\n  HSVAtoHSLA,\n  RGBAtoHex,\n  HSLAtoHSVA,\n  parseHex,\n  Hexa,\n} from '../../../util/colorUtils'\n\nexport interface VColorPickerColor {\n  alpha: number\n  hex: Hex\n  hexa: Hexa\n  hsla: HSLA\n  hsva: HSVA\n  hue: number\n  rgba: RGBA\n}\n\nexport function fromHSVA (hsva: HSVA): VColorPickerColor {\n  hsva = { ...hsva }\n  const hexa = HSVAtoHex(hsva)\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla: HSVAtoHSLA(hsva),\n    hsva,\n    hue: hsva.h,\n    rgba: HSVAtoRGBA(hsva),\n  }\n}\n\nexport function fromHSLA (hsla: HSLA): VColorPickerColor {\n  const hsva = HSLAtoHSVA(hsla)\n  const hexa = HSVAtoHex(hsva)\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba: HSVAtoRGBA(hsva),\n  }\n}\n\nexport function fromRGBA (rgba: RGBA): VColorPickerColor {\n  const hsva = RGBAtoHSVA(rgba)\n  const hexa = RGBAtoHex(rgba)\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla: HSVAtoHSLA(hsva),\n    hsva,\n    hue: hsva.h,\n    rgba,\n  }\n}\n\nexport function fromHexa (hexa: Hexa): VColorPickerColor {\n  const hsva = HexToHSVA(hexa)\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla: HSVAtoHSLA(hsva),\n    hsva,\n    hue: hsva.h,\n    rgba: HSVAtoRGBA(hsva),\n  }\n}\n\nexport function fromHex (hex: Hex): VColorPickerColor {\n  return fromHexa(parseHex(hex))\n}\n\nfunction has (obj: object, key: string[]) {\n  return key.every(k => obj.hasOwnProperty(k))\n}\n\nexport function parseColor (color: any, oldColor: VColorPickerColor | null) {\n  if (!color) return fromRGBA({ r: 255, g: 0, b: 0, a: 1 })\n\n  if (typeof color === 'string') {\n    if (color === 'transparent') return fromHexa('#00000000')\n\n    const hex = parseHex(color)\n\n    if (oldColor && hex === oldColor.hexa) return oldColor\n    else return fromHexa(hex)\n  }\n\n  if (typeof color === 'object') {\n    if (color.hasOwnProperty('alpha')) return color\n\n    const a = color.hasOwnProperty('a') ? parseFloat(color.a) : 1\n\n    if (has(color, ['r', 'g', 'b'])) {\n      if (oldColor && color === oldColor.rgba) return oldColor\n      else return fromRGBA({ ...color, a })\n    } else if (has(color, ['h', 's', 'l'])) {\n      if (oldColor && color === oldColor.hsla) return oldColor\n      else return fromHSLA({ ...color, a })\n    } else if (has(color, ['h', 's', 'v'])) {\n      if (oldColor && color === oldColor.hsva) return oldColor\n      else return fromHSVA({ ...color, a })\n    }\n  }\n\n  return fromRGBA({ r: 255, g: 0, b: 0, a: 1 })\n}\n\nexport function extractColor (color: VColorPickerColor, input: any) {\n  if (typeof input === 'string') {\n    return input.length === 7 ? color.hex : color.hexa\n  }\n\n  if (typeof input === 'object') {\n    if (has(input, ['r', 'g', 'b'])) return color.rgba\n    else if (has(input, ['h', 's', 'l'])) return color.hsla\n    else if (has(input, ['h', 's', 'v'])) return color.hsva\n  }\n\n  return color\n}\n"],"sourceRoot":""}