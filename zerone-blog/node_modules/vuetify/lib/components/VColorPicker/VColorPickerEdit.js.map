{"version":3,"sources":["../../../src/components/VColorPicker/VColorPickerEdit.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VColorPickerEdit.sass'\n\n// Components\nimport VBtn from '../VBtn'\nimport VIcon from '../VIcon'\n\n// Helpers\nimport { parseHex } from '../../util/colorUtils'\n\n// Types\nimport Vue, { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { VColorPickerColor, fromRGBA, fromHexa, fromHSLA } from './util'\n\ntype Input = [string, number, string]\n\nexport type Mode = {\n  inputs?: Input[]\n  from: Function\n}\n\nexport const modes = {\n  rgba: {\n    inputs: [\n      ['r', 255, 'int'],\n      ['g', 255, 'int'],\n      ['b', 255, 'int'],\n      ['a', 1, 'float'],\n    ],\n    from: fromRGBA,\n  },\n  hsla: {\n    inputs: [\n      ['h', 360, 'int'],\n      ['s', 1, 'float'],\n      ['l', 1, 'float'],\n      ['a', 1, 'float'],\n    ],\n    from: fromHSLA,\n  },\n  hexa: {\n    from: fromHexa,\n  },\n} as { [key: string]: Mode }\n\nexport default Vue.extend({\n  name: 'v-color-picker-edit',\n\n  props: {\n    color: Object as PropValidator<VColorPickerColor>,\n    disabled: Boolean,\n    hideModeSwitch: Boolean,\n    mode: {\n      type: String,\n      default: 'rgba',\n      validator: (v: string) => Object.keys(modes).includes(v),\n    },\n  },\n\n  data () {\n    return {\n      modes,\n      internalMode: this.mode,\n    }\n  },\n\n  computed: {\n    currentMode (): Mode {\n      return this.modes[this.internalMode]\n    },\n  },\n\n  watch: {\n    mode (mode) {\n      this.internalMode = mode\n    },\n  },\n\n  created () {\n    this.internalMode = this.mode\n  },\n\n  methods: {\n    getValue (v: any, type: string) {\n      if (type === 'float') return Math.round(v * 100) / 100\n      else if (type === 'int') return Math.round(v)\n      else return 0\n    },\n    parseValue (v: string, type: string) {\n      if (type === 'float') return parseFloat(v)\n      else if (type === 'int') return parseInt(v, 10) || 0\n      else return 0\n    },\n    changeMode () {\n      const modes = Object.keys(this.modes)\n      const index = modes.indexOf(this.internalMode)\n      const newMode = modes[(index + 1) % modes.length]\n      this.internalMode = newMode\n      this.$emit('update:mode', newMode)\n    },\n    genInput (target: string, attrs: any, value: any, on: any): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__input',\n      }, [\n        this.$createElement('input', {\n          key: target,\n          attrs,\n          domProps: {\n            value,\n          },\n          on,\n        }),\n        this.$createElement('span', target.toUpperCase()),\n      ])\n    },\n    genInputs (): VNode[] | VNode {\n      switch (this.internalMode) {\n        case 'hexa': {\n          const hex = this.color.hexa\n          const value = hex.endsWith('FF') ? hex.substr(0, 7) : hex\n          return this.genInput(\n            'hex',\n            {\n              maxlength: 9,\n              disabled: this.disabled,\n            },\n            value,\n            {\n              change: (e: Event) => {\n                const el = e.target as HTMLInputElement\n                this.$emit('update:color', this.currentMode.from(parseHex(el.value)))\n              },\n            }\n          )\n        }\n        default: {\n          return this.currentMode.inputs!.map(([target, max, type]) => {\n            const value = this.color[this.internalMode as keyof VColorPickerColor] as any\n            return this.genInput(\n              target,\n              {\n                type: 'number',\n                min: 0,\n                max,\n                step: type === 'float' ? '0.01' : type === 'int' ? '1' : undefined,\n                disabled: this.disabled,\n              },\n              this.getValue(value[target], type),\n              {\n                input: (e: Event) => {\n                  const el = e.target as HTMLInputElement\n                  const newVal = this.parseValue(el.value || '0', type)\n\n                  this.$emit('update:color', this.currentMode.from(\n                    Object.assign({}, value, { [target]: newVal }),\n                    this.color.alpha\n                  ))\n                },\n              }\n            )\n          })\n        }\n      }\n    },\n    genSwitch (): VNode {\n      return this.$createElement(VBtn, {\n        props: {\n          small: true,\n          icon: true,\n          disabled: this.disabled,\n        },\n        on: {\n          click: this.changeMode,\n        },\n      }, [\n        this.$createElement(VIcon, '$vuetify.icons.unfold'),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-color-picker__edit',\n    }, [\n      this.genInputs(),\n      !this.hideModeSwitch && this.genSwitch(),\n    ])\n  },\n})\n"],"sourceRoot":""}