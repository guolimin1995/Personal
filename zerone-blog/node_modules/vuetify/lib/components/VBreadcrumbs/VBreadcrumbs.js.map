{"version":3,"sources":["../../../src/components/VBreadcrumbs/VBreadcrumbs.ts"],"names":[],"mappings":";;;AACA,OAAO,wDAAP;AAMA;AACA,SAAS,mBAAT,EAA8B,gBAA9B,QAAsD,GAAtD;AAEA;AACA,OAAO,SAAP,MAAsB,wBAAtB;AAEA;AACA,OAAO,MAAP,MAAmB,mBAAnB;AAEA,eAAe,OACb;AACA;AAFa,EAGb,MAHa,CAGN;AACP,UAAM,eADC;AAGP,WAAO;AACL,iBAAS;AACP,kBAAM,MADC;AAEP,qBAAS;AAFF,SADJ;AAKL,eAAO;AACL,kBAAM,KADD;AAEL,qBAAS;AAAA,uBAAO,EAAP;AAAA;AAFJ,SALF;AASL,eAAO;AATF,KAHA;AAeP,cAAU;AACR,eADQ,qBACD;AACL;AACE,wCAAwB,KAAK;AAD/B,eAEK,KAAK,YAFV;AAID;AANO,KAfH;AAwBP,aAAS;AACP,kBADO,wBACG;AACR,mBAAO,KAAK,cAAL,CAAoB,mBAApB,EAAyC,KAAK,MAAL,CAAY,OAAZ,GAAsB,KAAK,MAAL,CAAY,OAAlC,GAA4C,KAAK,OAA1F,CAAP;AACD,SAHM;AAIP,gBAJO,sBAIC;AACN,gBAAM,QAAQ,EAAd;AACA,gBAAM,UAAU,CAAC,CAAC,KAAK,YAAL,CAAkB,IAApC;AACA,gBAAM,OAAO,EAAb;AAEA,iBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,KAAL,CAAW,MAA/B,EAAuC,GAAvC,EAA4C;AAC1C,oBAAM,OAAO,KAAK,KAAL,CAAW,CAAX,CAAb;AAEA,qBAAK,IAAL,CAAU,KAAK,IAAf;AAEA,oBAAI,OAAJ,EAAa,MAAM,IAAN,CAAW,KAAK,YAAL,CAAkB,IAAlB,CAAwB,EAAE,UAAF,EAAxB,CAAX,EAAb,KACK,MAAM,IAAN,CAAW,KAAK,cAAL,CAAoB,gBAApB,EAAsC,EAAE,KAAK,KAAK,IAAL,CAAU,GAAV,CAAP,EAAuB,OAAO,IAA9B,EAAtC,EAA4E,CAAC,KAAK,IAAN,CAA5E,CAAX;AAEL,oBAAI,IAAI,KAAK,KAAL,CAAW,MAAX,GAAoB,CAA5B,EAA+B,MAAM,IAAN,CAAW,KAAK,UAAL,EAAX;AAChC;AAED,mBAAO,KAAP;AACD;AArBM,KAxBF;AAgDP,UAhDO,kBAgDC,CAhDD,EAgDE;AACP,YAAM,WAAW,KAAK,MAAL,CAAY,OAAZ,IAAuB,KAAK,QAAL,EAAxC;AAEA,eAAO,EAAE,IAAF,EAAQ;AACb,yBAAa,eADA;AAEb,qBAAS,KAAK;AAFD,SAAR,EAGJ,QAHI,CAAP;AAID;AAvDM,CAHM,CAAf","sourcesContent":["// Styles\nimport './VBreadcrumbs.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n// Components\nimport { VBreadcrumbsDivider, VBreadcrumbsItem } from '.'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Utils\nimport mixins from '../../util/mixins'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-breadcrumbs',\n\n  props: {\n    divider: {\n      type: String,\n      default: '/',\n    },\n    items: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<any[]>,\n    large: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-breadcrumbs--large': this.large,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  methods: {\n    genDivider () {\n      return this.$createElement(VBreadcrumbsDivider, this.$slots.divider ? this.$slots.divider : this.divider)\n    },\n    genItems () {\n      const items = []\n      const hasSlot = !!this.$scopedSlots.item\n      const keys = []\n\n      for (let i = 0; i < this.items.length; i++) {\n        const item = this.items[i]\n\n        keys.push(item.text)\n\n        if (hasSlot) items.push(this.$scopedSlots.item!({ item }))\n        else items.push(this.$createElement(VBreadcrumbsItem, { key: keys.join('.'), props: item }, [item.text]))\n\n        if (i < this.items.length - 1) items.push(this.genDivider())\n      }\n\n      return items\n    },\n  },\n\n  render (h): VNode {\n    const children = this.$slots.default || this.genItems()\n\n    return h('ul', {\n      staticClass: 'v-breadcrumbs',\n      'class': this.classes,\n    }, children)\n  },\n})\n"],"sourceRoot":""}