{"version":3,"sources":["../../../src/components/VRadioGroup/VRadio.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VRadio.sass'\n\n// Components\nimport VRadioGroup from './VRadioGroup'\nimport VLabel from '../VLabel'\nimport VIcon from '../VIcon'\nimport VInput from '../VInput'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Rippleable from '../../mixins/rippleable'\nimport Themeable from '../../mixins/themeable'\nimport Selectable from '../../mixins/selectable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\nimport mixins from '../../util/mixins'\n\nconst baseMixins = mixins(\n  Colorable,\n  Rippleable,\n  GroupableFactory('radioGroup'),\n  Themeable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  radioGroup: InstanceType<typeof VRadioGroup>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-radio',\n\n  inheritAttrs: false,\n\n  props: {\n    color: {\n      type: String,\n      default: 'accent',\n    },\n    disabled: Boolean,\n    label: String,\n    name: String,\n    id: String,\n    onIcon: {\n      type: String,\n      default: '$vuetify.icons.radioOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$vuetify.icons.radioOff',\n    },\n    readonly: Boolean,\n    value: {\n      default: null,\n    },\n  },\n\n  data: () => ({\n    isFocused: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-radio--is-disabled': this.isDisabled,\n        'v-radio--is-focused': this.isFocused,\n        ...this.themeClasses,\n        ...this.groupClasses,\n      }\n    },\n    computedColor (): string | false {\n      const color = (this.radioGroup || {}).validationState\n\n      return this.isActive ? this.color : (color || false)\n    },\n    computedIcon (): string {\n      return this.isActive\n        ? this.onIcon\n        : this.offIcon\n    },\n    computedId (): string {\n      return VInput.options.computed.computedId.call(this)\n    },\n    hasLabel: VInput.options.computed.hasLabel,\n    hasState (): boolean {\n      return (this.radioGroup || {}).hasState\n    },\n    isDisabled (): boolean {\n      return this.disabled || !!(this.radioGroup || {}).disabled\n    },\n    isReadonly (): boolean {\n      return this.readonly || !!(this.radioGroup || {}).readonly\n    },\n    computedName (): string {\n      if (this.name || !this.radioGroup) {\n        return this.name\n      }\n\n      return this.radioGroup.name || `radio-${this.radioGroup._uid}`\n    },\n  },\n\n  methods: {\n    genInput (args: any) {\n      // We can't actually use the mixin directly because\n      // it's made for standalone components, but its\n      // genInput method is exactly what we need\n      return Selectable.options.methods.genInput.call(this, 'radio', args)\n    },\n    genLabel () {\n      if (!this.hasLabel) return null\n\n      return this.$createElement(VLabel, {\n        on: { click: this.onChange },\n        attrs: {\n          for: this.computedId,\n        },\n        props: {\n          color: ((this.radioGroup || {}).validationState) || '',\n          focused: this.hasState,\n        },\n      }, getSlot(this, 'label') || this.label)\n    },\n    genRadio () {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.genInput({\n          name: this.computedName,\n          value: this.value,\n          ...this.$attrs,\n        }),\n        this.genRipple(this.setTextColor(this.computedColor)),\n        this.$createElement(VIcon, this.setTextColor(this.computedColor, {}), this.computedIcon),\n      ])\n    },\n    onFocus (e: Event) {\n      this.isFocused = true\n      this.$emit('focus', e)\n    },\n    onBlur (e: Event) {\n      this.isFocused = false\n      this.$emit('blur', e)\n    },\n    onChange () {\n      if (this.isDisabled || this.isReadonly || this.isActive) return\n\n      this.toggle()\n    },\n    onKeydown: () => {}, // Override default with noop\n  },\n\n  render (h): VNode {\n    let data = {\n      staticClass: 'v-radio',\n      class: this.classes,\n    } as VNodeData\n\n    if ((this.radioGroup || {}).hasError) {\n      data = this.setTextColor(this.color, data)\n    }\n\n    return h('div', data, [\n      this.genRadio(),\n      this.genLabel(),\n    ])\n  },\n})\n"],"sourceRoot":""}