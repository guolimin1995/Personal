{"version":3,"sources":["../../../src/components/VTextarea/VTextarea.ts"],"names":[],"mappings":";;;AACA,OAAO,kDAAP;AAEA;AACA,OAAO,UAAP,MAAuB,0BAAvB;AAEA;AACA,OAAO,MAAP,MAAmB,mBAAnB;AAWA,IAAM,aAAa,OAGjB,UAHiB,CAAnB;AAMA;AACA,eAAe,WAAW,MAAX,CAAkB;AAC/B,UAAM,YADyB;AAG/B,WAAO;AACL,kBAAU,OADL;AAEL,kBAAU,OAFL;AAGL,mBAAW;AACT,kBAAM,CAAC,MAAD,EAAS,MAAT,CADG;AAET,qBAAS,EAFA;AAGT,uBAAW,mBAAC,CAAD;AAAA,uBAAY,CAAC,MAAM,WAAW,CAAX,CAAN,CAAb;AAAA;AAHF,SAHN;AAQL,cAAM;AACJ,kBAAM,CAAC,MAAD,EAAS,MAAT,CADF;AAEJ,qBAAS,CAFL;AAGJ,uBAAW,mBAAC,CAAD;AAAA,uBAAY,CAAC,MAAM,SAAS,CAAT,EAAY,EAAZ,CAAN,CAAb;AAAA;AAHP;AARD,KAHwB;AAkB/B,cAAU;AACR,eADQ,qBACD;AACL;AACE,8BAAc,IADhB;AAEE,yCAAyB,KAAK,QAFhC;AAGE,yCAAyB,KAAK;AAHhC,eAIK,WAAW,OAAX,CAAmB,QAAnB,CAA4B,OAA5B,CAAoC,IAApC,CAAyC,IAAzC,CAJL;AAMD,SARO;AASR,sBATQ,4BASM;AACZ,mBAAO,KAAK,QAAL,IAAiB,KAAK,QAA7B;AACD;AAXO,KAlBqB;AAgC/B,WAAO;AACL,iBADK,uBACI;AACP,iBAAK,QAAL,IAAiB,KAAK,SAAL,CAAe,KAAK,oBAApB,CAAjB;AACD;AAHI,KAhCwB;AAsC/B,WAtC+B,qBAsCxB;AAAA;;AACL,mBAAW,YAAK;AACd,kBAAK,QAAL,IAAiB,MAAK,oBAAL,EAAjB;AACD,SAFD,EAEG,CAFH;AAGD,KA1C8B;;AA4C/B,aAAS;AACP,4BADO,kCACa;AAClB,gBAAM,QAAQ,KAAK,KAAL,CAAW,KAAzB;AACA,gBAAI,CAAC,KAAL,EAAY;AAEZ,kBAAM,KAAN,CAAY,MAAZ,GAAqB,GAArB;AACA,gBAAM,SAAS,MAAM,YAArB;AACA,gBAAM,YAAY,SAAS,KAAK,IAAd,EAAoB,EAApB,IAA0B,WAAW,KAAK,SAAhB,CAA5C;AACA;AACA;AACA,kBAAM,KAAN,CAAY,MAAZ,GAAqB,KAAK,GAAL,CAAS,SAAT,EAAoB,MAApB,IAA8B,IAAnD;AACD,SAXM;AAYP,gBAZO,sBAYC;AACN,gBAAM,QAAQ,WAAW,OAAX,CAAmB,OAAnB,CAA2B,QAA3B,CAAoC,IAApC,CAAyC,IAAzC,CAAd;AAEA,kBAAM,GAAN,GAAY,UAAZ;AACA,mBAAO,MAAM,IAAN,CAAY,KAAZ,CAAmB,IAA1B;AACA,kBAAM,IAAN,CAAY,KAAZ,CAAmB,IAAnB,GAA0B,KAAK,IAA/B;AAEA,mBAAO,KAAP;AACD,SApBM;AAqBP,eArBO,mBAqBE,CArBF,EAqBU;AACf,uBAAW,OAAX,CAAmB,OAAnB,CAA2B,OAA3B,CAAmC,IAAnC,CAAwC,IAAxC,EAA8C,CAA9C;AACA,iBAAK,QAAL,IAAiB,KAAK,oBAAL,EAAjB;AACD,SAxBM;AAyBP,iBAzBO,qBAyBI,CAzBJ,EAyBoB;AACzB;AACA;AACA;AACA,gBAAI,KAAK,SAAL,IAAkB,EAAE,OAAF,KAAc,EAApC,EAAwC;AACtC,kBAAE,eAAF;AACD;AAED,iBAAK,KAAL,CAAW,SAAX,EAAsB,CAAtB;AACD;AAlCM;AA5CsB,CAAlB,CAAf","sourcesContent":["// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n"],"sourceRoot":""}