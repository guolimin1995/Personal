{"version":3,"sources":["../../../src/components/VDataTable/VMobileRow.ts"],"names":[],"mappings":"AAAA,OAAO,GAAP,MAA2B,KAA3B;AAGA,SAAS,oBAAT,QAAqC,oBAArC;AAEA,eAAe,IAAI,MAAJ,CAAW;AACxB,UAAM,OADkB;AAGxB,gBAAY,IAHY;AAKxB,WAAO;AACL,iBAAS,KADJ;AAEL,cAAM,MAFD;AAGL,aAAK;AAHA,KALiB;AAWxB,UAXwB,kBAWhB,CAXgB,QAWS;AAAA,YAApB,KAAoB,QAApB,KAAoB;AAAA,YAAb,KAAa,QAAb,KAAa;AAAA,YAAN,IAAM,QAAN,IAAM;;AAC/B,YAAM,gBAAgB,OAAtB;AAEA,YAAM,UAAmB,MAAM,OAAN,CAAc,GAAd,CAAkB,UAAC,MAAD,EAAwB;AACjE,gBAAM,UAAU;AACd,4CAA4B;AADd,aAAhB;AAIA,gBAAM,WAAW,EAAjB;AACA,gBAAM,QAAQ,qBAAqB,MAAM,IAA3B,EAAiC,OAAO,KAAxC,CAAd;AAEA,gBAAM,WAAW,OAAO,KAAxB;AACA,gBAAM,aAAa,KAAK,WAAL,IAAoB,KAAK,WAAL,CAAiB,QAAjB,CAAvC;AACA,gBAAM,cAAc,cAAc,QAAd,CAApB;AAEA,gBAAI,UAAJ,EAAgB;AACd,yBAAS,IAAT,CAAc,WAAW,EAAE,MAAM,MAAM,IAAd,EAAoB,cAApB,EAA4B,YAA5B,EAAX,CAAd;AACD,aAFD,MAEO,IAAI,WAAJ,EAAiB;AACtB,yBAAS,IAAT,CAAc,WAAd;AACD,aAFM,MAEA;AACL,yBAAS,IAAT,CAAc,KAAd;AACD;AAED,mBAAO,EAAE,IAAF,EAAQ;AACb,uBAAO;AADM,aAAR,EAEJ,CACD,EAAE,KAAF,EAAS,EAAE,aAAa,mCAAf,EAAT,EAA+D,CAC7D,OAAO,KAAP,KAAiB,iBAAjB,IAAsC,EAAE,KAAF,EAAS,EAAE,aAAa,kCAAf,EAAT,EAA8D,CAAC,OAAO,IAAR,CAA9D,CADuB,EAE7D,EAAE,KAAF,EAAS,EAAE,aAAa,gCAAf,EAAT,EAA4D,QAA5D,CAF6D,CAA/D,CADC,CAFI,CAAP;AAQD,SA5BwB,CAAzB;AA8BA,eAAO,EAAE,IAAF,EAAQ,IAAR,EAAc,OAAd,CAAP;AACD;AA7CuB,CAAX,CAAf","sourcesContent":["import Vue, { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { TableHeader } from './mixins/header'\nimport { getObjectValueByPath } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-row',\n\n  functional: true,\n\n  props: {\n    headers: Array as PropValidator<TableHeader[]>,\n    item: Object,\n    rtl: Boolean,\n  },\n\n  render (h, { props, slots, data }): VNode {\n    const computedSlots = slots()\n\n    const columns: VNode[] = props.headers.map((header: TableHeader) => {\n      const classes = {\n        'v-data-table__mobile-row': true,\n      }\n\n      const children = []\n      const value = getObjectValueByPath(props.item, header.value)\n\n      const slotName = header.value\n      const scopedSlot = data.scopedSlots && data.scopedSlots[slotName]\n      const regularSlot = computedSlots[slotName]\n\n      if (scopedSlot) {\n        children.push(scopedSlot({ item: props.item, header, value }))\n      } else if (regularSlot) {\n        children.push(regularSlot)\n      } else {\n        children.push(value)\n      }\n\n      return h('td', {\n        class: classes,\n      }, [\n        h('div', { staticClass: 'v-data-table__mobile-row__wrapper' }, [\n          header.value !== 'dataTableSelect' && h('div', { staticClass: 'v-data-table__mobile-row__header' }, [header.text]),\n          h('div', { staticClass: 'v-data-table__mobile-row__cell' }, children),\n        ]),\n      ])\n    })\n\n    return h('tr', data, columns)\n  },\n})\n"],"sourceRoot":""}