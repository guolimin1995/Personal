{"version":3,"sources":["../../../src/components/VExpansionPanel/VExpansionPanel.ts"],"names":[],"mappings":";;;AAMA,SAAS,WAAW,gBAApB,QAA4C,wBAA5C;AACA,SAAS,WAAW,kBAApB,QAA8C,0BAA9C;AAEA;AACA,SAAS,OAAT,QAAwB,oBAAxB;AACA,OAAO,MAAP,MAAmB,mBAAnB;AAQA,eAAe,OACb,iBAA6D,iBAA7D,EAAgF,mBAAhF,EAAqG,oBAArG,CADa,EAEb,mBAAmB,gBAAnB,EAAqC,IAArC;AACA;AAHa,EAIb,MAJa,CAIN;AACP,UAAM,mBADC;AAGP,WAAO;AACL,kBAAU,OADL;AAEL,kBAAU;AAFL,KAHA;AAQP,QARO,kBAQH;AACF,eAAO;AACL,qBAAS,IADJ;AAEL,oBAAQ,IAFH;AAGL,0BAAc;AAHT,SAAP;AAKD,KAdM;;AAgBP,cAAU;AACR,eADQ,qBACD;AACL;AACE,6CAA6B,KAAK,QADpC;AAEE,kDAAkC,KAAK,YAFzC;AAGE,+CAA+B,KAAK;AAHtC,eAIK,KAAK,YAJV;AAMD,SARO;AASR,kBATQ,wBASE;AACR,mBAAO,KAAK,eAAL,CAAqB,QAArB,IAAiC,KAAK,QAA7C;AACD,SAXO;AAYR,kBAZQ,wBAYE;AACR,mBAAO,KAAK,eAAL,CAAqB,QAArB,IAAiC,KAAK,QAA7C;AACD;AAdO,KAhBH;AAiCP,aAAS;AACP,uBADO,2BACU,EADV,EAC4C;AACjD,iBAAK,OAAL,GAAe,EAAf;AACD,SAHM;AAIP,yBAJO,+BAIU;AACf,iBAAK,OAAL,GAAe,IAAf;AACD,SANM;AAOP,sBAPO,0BAOS,EAPT,EAO0C;AAC/C,iBAAK,MAAL,GAAc,EAAd;AACA,eAAG,GAAH,CAAO,OAAP,EAAgB,KAAK,OAArB;AACD,SAVM;AAWP,wBAXO,8BAWS;AACd,iBAAK,MAAL,GAAc,IAAd;AACD,SAbM;AAcP,eAdO,mBAcE,CAdF,EAce;AACpB,gBAAI,EAAE,MAAN,EAAc,KAAK,MAAL,CAAa,GAAb,CAAiB,IAAjB;AAEd,iBAAK,KAAL,CAAW,OAAX,EAAoB,CAApB;AAEA,iBAAK,UAAL,IAAmB,KAAK,UAAxB,IAAsC,KAAK,MAAL,EAAtC;AACD,SApBM;AAqBP,cArBO,oBAqBD;AAAA;;AACJ;AACA,gBAAI,KAAK,OAAT,EAAkB,KAAK,OAAL,CAAa,QAAb,GAAwB,IAAxB;AAClB,iBAAK,SAAL,CAAe;AAAA,uBAAM,MAAK,KAAL,CAAW,QAAX,CAAN;AAAA,aAAf;AACD;AAzBM,KAjCF;AA6DP,UA7DO,kBA6DC,CA7DD,EA6DE;AACP,eAAO,EAAE,KAAF,EAAS;AACd,yBAAa,mBADC;AAEd,mBAAO,KAAK,OAFE;AAGd,mBAAO;AACL,iCAAiB,OAAO,KAAK,QAAZ;AADZ;AAHO,SAAT,EAMJ,QAAQ,IAAR,CANI,CAAP;AAOD;AArEM,CAJM,CAAf","sourcesContent":["// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n"],"sourceRoot":""}