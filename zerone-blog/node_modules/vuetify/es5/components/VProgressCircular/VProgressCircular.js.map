{"version":3,"sources":["../../../src/components/VProgressCircular/VProgressCircular.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VProgressCircular.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren } from 'vue'\n\n/* @vue/component */\nexport default Colorable.extend({\n  name: 'v-progress-circular',\n\n  props: {\n    button: Boolean,\n\n    indeterminate: Boolean,\n\n    rotate: {\n      type: [Number, String],\n      default: 0,\n    },\n\n    size: {\n      type: [Number, String],\n      default: 32,\n    },\n\n    width: {\n      type: [Number, String],\n      default: 4,\n    },\n\n    value: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    radius: 20,\n  }),\n\n  computed: {\n    calculatedSize (): number {\n      return Number(this.size) + (this.button ? 8 : 0)\n    },\n\n    circumference (): number {\n      return 2 * Math.PI * this.radius\n    },\n\n    classes (): object {\n      return {\n        'v-progress-circular--indeterminate': this.indeterminate,\n        'v-progress-circular--button': this.button,\n      }\n    },\n\n    normalizedValue (): number {\n      if (this.value < 0) {\n        return 0\n      }\n\n      if (this.value > 100) {\n        return 100\n      }\n\n      return parseFloat(this.value)\n    },\n\n    strokeDashArray (): number {\n      return Math.round(this.circumference * 1000) / 1000\n    },\n\n    strokeDashOffset (): string {\n      return ((100 - this.normalizedValue) / 100) * this.circumference + 'px'\n    },\n\n    strokeWidth (): number {\n      return Number(this.width) / +this.size * this.viewBoxSize * 2\n    },\n\n    styles (): object {\n      return {\n        height: convertToUnit(this.calculatedSize),\n        width: convertToUnit(this.calculatedSize),\n      }\n    },\n\n    svgStyles (): object {\n      return {\n        transform: `rotate(${Number(this.rotate)}deg)`,\n      }\n    },\n\n    viewBoxSize (): number {\n      return this.radius / (1 - Number(this.width) / +this.size)\n    },\n  },\n\n  methods: {\n    genCircle (name: string, offset: string | number): VNode {\n      return this.$createElement('circle', {\n        class: `v-progress-circular__${name}`,\n        attrs: {\n          fill: 'transparent',\n          cx: 2 * this.viewBoxSize,\n          cy: 2 * this.viewBoxSize,\n          r: this.radius,\n          'stroke-width': this.strokeWidth,\n          'stroke-dasharray': this.strokeDashArray,\n          'stroke-dashoffset': offset,\n        },\n      })\n    },\n    genSvg (): VNode {\n      const children = [\n        this.indeterminate || this.genCircle('underlay', 0),\n        this.genCircle('overlay', this.strokeDashOffset),\n      ] as VNodeChildren\n\n      return this.$createElement('svg', {\n        style: this.svgStyles,\n        attrs: {\n          xmlns: 'http://www.w3.org/2000/svg',\n          viewBox: `${this.viewBoxSize} ${this.viewBoxSize} ${2 * this.viewBoxSize} ${2 * this.viewBoxSize}`,\n        },\n      }, children)\n    },\n    genInfo (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-progress-circular__info',\n      }, this.$slots.default)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.color, {\n      staticClass: 'v-progress-circular',\n      attrs: {\n        role: 'progressbar',\n        'aria-valuemin': 0,\n        'aria-valuemax': 100,\n        'aria-valuenow': this.indeterminate ? undefined : this.normalizedValue,\n      },\n      class: this.classes,\n      style: this.styles,\n      on: this.$listeners,\n    }), [\n      this.genSvg(),\n      this.genInfo(),\n    ])\n  },\n})\n"],"sourceRoot":""}