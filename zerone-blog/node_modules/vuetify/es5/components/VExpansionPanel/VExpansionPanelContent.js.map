{"version":3,"sources":["../../../src/components/VExpansionPanel/VExpansionPanelContent.ts"],"names":[],"mappings":";;;;;;;;AAKA;;;;AACA;;AAGA;;AACA;;;;;;AAFA;;AAJA;AAWA,IAAM,aAAa,sBACjB,kBADiB,EAEjB,yBAAyD,gBAAzD,EAA2E,2BAA3E,EAAwG,mBAAxG,CAFiB,CAAnB;AASA;kBACe,WAAW,MAAX,GAA6B,MAA7B,CAAoC;AACjD,UAAM,2BAD2C;AAGjD,cAAU;AACR,gBADQ,sBACA;AACN,mBAAO,KAAK,cAAL,CAAoB,QAA3B;AACD;AAHO,KAHuC;AASjD,WATiD,qBAS1C;AACL,aAAK,cAAL,CAAoB,eAApB,CAAoC,IAApC;AACD,KAXgD;AAajD,iBAbiD,2BAapC;AACX,aAAK,cAAL,CAAoB,iBAApB;AACD,KAfgD;AAiBjD,UAjBiD,kBAiBzC,CAjByC,EAiBxC;AACP,eAAO,EAAE,8BAAF,EAAqB,CAC1B,EAAE,KAAF,EAAS;AACP,yBAAa,2BADN;AAEP,wBAAY,CAAC;AACX,sBAAM,MADK;AAEX,uBAAO,KAAK;AAFD,aAAD;AAFL,SAAT,EAMG,KAAK,eAAL,CAAqB,CACtB,EAAE,KAAF,EAAS,EAAE,OAAO,iCAAT,EAAT,EAAuD,sBAAQ,IAAR,CAAvD,CADsB,CAArB,CANH,CAD0B,CAArB,CAAP;AAWD;AA7BgD,CAApC,C","sourcesContent":["// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, [\n      h('div', {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }, this.showLazyContent([\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ])),\n    ])\n  },\n})\n"],"sourceRoot":""}