{"version":3,"sources":["../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts"],"names":[],"mappings":";;;;;;;;AAKA;;AAGA;;AAGA;;;AAVA;;AAEA;;;;AAGA;;AAGA;;;;AAGA;;AACA;;;;;;AAKA,IAAM,aAAa,sBACjB,yBAAyD,gBAAzD,EAA2E,0BAA3E,EAAuG,mBAAvG,CADiB,CAAnB;kBASe,WAAW,MAAX,GAA6B,MAA7B,CAAoC;AACjD,UAAM,0BAD2C;AAGjD,gBAAY,EAAE,wBAAF,EAHqC;AAKjD,WAAO;AACL,2BAAmB,OADd;AAEL,oBAAY;AACV,kBAAM,MADI;AAEV,qBAAS;AAFC,SAFP;AAML,qBAAa,OANR;AAOL,gBAAQ;AACN,kBAAM,CAAC,OAAD,EAAU,MAAV,CADA;AAEN,qBAAS;AAFH;AAPH,KAL0C;AAkBjD,UAAM;AAAA,eAAO;AACX,0BAAc;AADH,SAAP;AAAA,KAlB2C;AAsBjD,cAAU;AACR,eADQ,qBACD;AACL,mBAAO;AACL,oDAAoC,KAAK,QADpC;AAEL,uDAAuC,KAAK;AAFvC,aAAP;AAID,SANO;AAOR,gBAPQ,sBAOA;AACN,mBAAO,KAAK,cAAL,CAAoB,QAA3B;AACD,SATO;AAUR,kBAVQ,wBAUE;AACR,mBAAO,KAAK,cAAL,CAAoB,UAA3B;AACD,SAZO;AAaR,kBAbQ,wBAaE;AACR,mBAAO,KAAK,cAAL,CAAoB,UAA3B;AACD;AAfO,KAtBuC;AAwCjD,WAxCiD,qBAwC1C;AACL,aAAK,cAAL,CAAoB,cAApB,CAAmC,IAAnC;AACD,KA1CgD;AA4CjD,iBA5CiD,2BA4CpC;AACX,aAAK,cAAL,CAAoB,gBAApB;AACD,KA9CgD;;AAgDjD,aAAS;AACP,eADO,mBACE,CADF,EACe;AACpB,iBAAK,KAAL,CAAW,OAAX,EAAoB,CAApB;AACD,SAHM;AAIP,eAJO,qBAIA;AACL,gBAAM,OAAO,sBAAQ,IAAR,EAAc,SAAd,KACX,CAAC,KAAK,cAAL,CAAoB,eAApB,EAA2B,KAAK,UAAhC,CAAD,CADF;AAGA,mBAAO,KAAK,cAAL,CAAoB,4BAApB,EAAqC,CAC1C,KAAK,cAAL,CAAoB,KAApB,EAA2B;AACzB,6BAAa,gCADY;AAEzB,uBAAO;AACL,sEAAkD,KAAK;AADlD,iBAFkB;AAKzB,4BAAY,CAAC;AACX,0BAAM,MADK;AAEX,2BAAO,CAAC,KAAK;AAFF,iBAAD;AALa,aAA3B,EASG,IATH,CAD0C,CAArC,CAAP;AAYD;AApBM,KAhDwC;AAuEjD,UAvEiD,kBAuEzC,CAvEyC,EAuExC;AAAA;;AACP,eAAO,EAAE,QAAF,EAAY;AACjB,yBAAa,0BADI;AAEjB,mBAAO,KAAK,OAFK;AAGjB,mBAAO;AACL,0BAAU,KAAK,UAAL,GAAkB,CAAC,CAAnB,GAAuB,IAD5B;AAEL,sBAAM;AAFD,aAHU;AAOjB,wBAAY,CAAC;AACX,sBAAM,QADK;AAEX,uBAAO,KAAK;AAFD,aAAD,CAPK;AAWjB,6BACK,KAAK,UADV;AAEE,uBAAO,KAAK,OAFd;AAGE,2BAAW;AAAA,2BAAO,MAAK,YAAL,GAAoB,IAA3B;AAAA,iBAHb;AAIE,yBAAS;AAAA,2BAAO,MAAK,YAAL,GAAoB,KAA3B;AAAA;AAJX;AAXiB,SAAZ,EAiBJ,CACD,sBAAQ,IAAR,EAAc,SAAd,EAAyB,EAAE,MAAM,KAAK,QAAb,EAAzB,EAAkD,IAAlD,CADC,EAED,KAAK,WAAL,IAAoB,KAAK,OAAL,EAFnB,CAjBI,CAAP;AAqBD;AA7FgD,CAApC,C","sourcesContent":["// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$vuetify.icons.expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }, [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n"],"sourceRoot":""}