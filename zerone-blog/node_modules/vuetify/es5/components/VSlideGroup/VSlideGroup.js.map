{"version":3,"sources":["../../../src/components/VSlideGroup/VSlideGroup.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport { VFadeTransition } from '../transitions'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Directives\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode } from 'vue'\n\ninterface TouchEvent {\n  touchstartX: number\n  touchmoveX: number\n  stopPropagation: Function\n}\n\ninterface Widths {\n  content: number\n  wrapper: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    content: HTMLElement\n    wrapper: HTMLElement\n  }\n}\n\nexport const BaseSlideGroup = mixins<options &\n/* eslint-disable indent */\n  ExtractVue<typeof BaseItemGroup>\n/* eslint-enable indent */\n>(\n  BaseItemGroup\n  /* @vue/component */\n).extend({\n  name: 'base-slide-group',\n\n  directives: {\n    Resize,\n    Touch,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-slide-item--active',\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$vuetify.icons.next',\n    },\n    mobileBreakPoint: {\n      type: [Number, String],\n      default: 1264,\n      validator: (v: any) => !isNaN(parseInt(v)),\n    },\n    prevIcon: {\n      type: String,\n      default: '$vuetify.icons.prev',\n    },\n    showArrows: Boolean,\n  },\n\n  data: () => ({\n    isOverflowing: false,\n    resizeTimeout: 0,\n    startX: 0,\n    scrollOffset: 0,\n    widths: {\n      content: 0,\n      wrapper: 0,\n    },\n  }),\n\n  computed: {\n    __cachedNext (): VNode {\n      return this.genTransition('next')\n    },\n    __cachedPrev (): VNode {\n      return this.genTransition('prev')\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-slide-group': true,\n      }\n    },\n    hasAffixes (): Boolean {\n      return (\n        (this.showArrows || !this.isMobile) &&\n        this.isOverflowing\n      )\n    },\n    hasNext (): boolean {\n      if (!this.hasAffixes) return false\n\n      const { content, wrapper } = this.widths\n\n      // Check one scroll ahead to know the width of right-most item\n      return content > Math.abs(this.scrollOffset) + wrapper\n    },\n    hasPrev (): boolean {\n      return this.hasAffixes && this.scrollOffset !== 0\n    },\n    isMobile (): boolean {\n      return this.$vuetify.breakpoint.width < this.mobileBreakPoint\n    },\n  },\n\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset (val) {\n      this.$refs.content.style.transform = `translateX(${-val}px)`\n    },\n  },\n\n  methods: {\n    genNext (): VNode | null {\n      if (!this.hasAffixes) return null\n\n      const slot = this.$scopedSlots.next\n        ? this.$scopedSlots.next({})\n        : this.$slots.next || this.__cachedNext\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        class: {\n          'v-slide-group__next--disabled': !this.hasNext,\n        },\n        on: {\n          click: () => this.onAffixClick('next'),\n        },\n        key: 'next',\n      }, [slot])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content',\n      }, this.$slots.default)\n    },\n    genData (): object {\n      return {\n        class: this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize,\n        }],\n      }\n    },\n    genIcon (location: 'prev' | 'next'): VNode | null {\n      let icon = location\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next'\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev'\n      }\n\n      const upperLocation = `${location[0].toUpperCase()}${location.slice(1)}`\n      const hasAffix = (this as any)[`has${upperLocation}`]\n\n      if (\n        !this.showArrows &&\n        !hasAffix\n      ) return null\n\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix,\n        },\n      }, (this as any)[`${icon}Icon`])\n    },\n    genPrev (): VNode | null {\n      if (!this.hasAffixes) return null\n\n      const slot = this.$scopedSlots.prev\n        ? this.$scopedSlots.prev({})\n        : this.$slots.prev || this.__cachedPrev\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        class: {\n          'v-slide-group__prev--disabled': !this.hasPrev,\n        },\n        on: {\n          click: () => this.onAffixClick('prev'),\n        },\n        key: 'prev',\n      }, [slot])\n    },\n    genTransition (location: 'prev' | 'next') {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)])\n    },\n    genWrapper (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: (e: TouchEvent) => this.overflowCheck(e, this.onTouchStart),\n            move: (e: TouchEvent) => this.overflowCheck(e, this.onTouchMove),\n            end: (e: TouchEvent) => this.overflowCheck(e, this.onTouchEnd),\n          },\n        }],\n        ref: 'wrapper',\n      }, [this.genContent()])\n    },\n    calculateNewOffset (direction: 'prev' | 'next', widths: Widths, rtl: boolean, currentScrollOffset: number) {\n      const sign = rtl ? -1 : 1\n      const newAbosluteOffset = sign * currentScrollOffset +\n        (direction === 'prev' ? -1 : 1) * widths.wrapper\n\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0)\n    },\n    onAffixClick (location: 'prev' | 'next') {\n      this.$emit(`click:${location}`)\n      this.scrollTo(location)\n    },\n    onResize () {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return\n\n      this.setWidths()\n    },\n    onTouchStart (e: TouchEvent) {\n      const { content } = this.$refs\n\n      this.startX = this.scrollOffset + e.touchstartX as number\n\n      content.style.setProperty('transition', 'none')\n      content.style.setProperty('willChange', 'transform')\n    },\n    onTouchMove (e: TouchEvent) {\n      this.scrollOffset = this.startX - e.touchmoveX\n    },\n    onTouchEnd () {\n      const { content, wrapper } = this.$refs\n      const maxScrollOffset = content.clientWidth - wrapper.clientWidth\n\n      content.style.setProperty('transition', null)\n      content.style.setProperty('willChange', null)\n\n      /* istanbul ignore else */\n      if (this.scrollOffset < 0 || !this.isOverflowing) {\n        this.scrollOffset = 0\n      } else if (this.scrollOffset >= maxScrollOffset) {\n        this.scrollOffset = maxScrollOffset\n      }\n    },\n    overflowCheck (e: TouchEvent, fn: (e: TouchEvent) => void) {\n      e.stopPropagation()\n      this.isOverflowing && fn(e)\n    },\n    scrollIntoView /* istanbul ignore next */ () {\n      if (!this.selectedItem) {\n        return\n      }\n\n      if (this.centerActive) {\n        this.scrollOffset = this.calculateCenteredOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl\n        )\n      } else if (this.isOverflowing) {\n        this.scrollOffset = this.calculateUpdatedOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl,\n          this.scrollOffset\n        )\n      } else {\n        this.scrollOffset = 0\n      }\n    },\n    calculateUpdatedOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean, currentScrollOffset: number): number {\n      const clientWidth = selectedElement.clientWidth\n      const offsetLeft = rtl\n        ? (widths.content - selectedElement.offsetLeft - clientWidth)\n        : selectedElement.offsetLeft\n\n      if (rtl) {\n        currentScrollOffset = -currentScrollOffset\n      }\n\n      const totalWidth = widths.wrapper + currentScrollOffset\n      const itemOffset = clientWidth + offsetLeft\n      const additionalOffset = clientWidth * 0.3\n\n      if (offsetLeft < currentScrollOffset) {\n        currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0)\n      } else if (totalWidth < itemOffset) {\n        currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper)\n      }\n\n      return rtl ? -currentScrollOffset : currentScrollOffset\n    },\n    calculateCenteredOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean): number {\n      const { offsetLeft, clientWidth } = selectedElement\n\n      if (rtl) {\n        const offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2\n        return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      } else {\n        const offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2\n        return Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      }\n    },\n    scrollTo /* istanbul ignore next */ (location: 'prev' | 'next') {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0,\n      }, this.$vuetify.rtl, this.scrollOffset)\n    },\n    setWidths /* istanbul ignore next */  () {\n      window.requestAnimationFrame(() => {\n        const { content, wrapper } = this.$refs\n\n        this.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0,\n        }\n\n        this.isOverflowing = this.widths.wrapper < this.widths.content\n\n        this.scrollIntoView()\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), [\n      this.genPrev(),\n      this.genWrapper(),\n      this.genNext(),\n    ])\n  },\n})\n\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n\n  provide (): object {\n    return {\n      slideGroup: this,\n    }\n  },\n})\n"],"sourceRoot":""}