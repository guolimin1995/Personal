{"version":3,"sources":["../../../../src/components/VCalendar/mixins/calendar-with-events.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './calendar-with-events.sass'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\n// Mixins\nimport CalendarBase from './calendar-base'\n\n// Util\nimport props from '../util/props'\nimport {\n  VTimestamp,\n  getDayIdentifier,\n  parseTime,\n} from '../util/timestamp'\nimport {\n  VEventParsed,\n  VEventInput,\n  parseEvent,\n  isEventOn,\n} from '../util/events'\n\n// Types\ntype VColorFunction = (event: VEventInput) => string\n\ntype VNameFunction = (event: VEventParsed, timedEvent: boolean) => string\n\ntype VTimeToY = (time: VTimestamp | number | string) => number\n\ntype VEventResetCheck = (date: VTimestamp) => void\n\ntype VEventVisualGetOffset = (visual: VEventVisual, visuals: VEventVisual[]) => number\n\ntype VEventGetter = (day: VTimestamp) => VEventParsed[]\n\ntype VEventVisualGetter = (events: VEventParsed[], timed: boolean) => VEventVisual[]\n\ntype VEventVisualToNode<D> = (visual: VEventVisual, index: number, day: D) => VNode\n\ntype VDailyEventsMap = {\n  [date: string]: {\n    parent: HTMLElement\n    more: HTMLElement | null\n    events: HTMLElement[]\n  }\n}\n\ninterface VEventVisual {\n  offset: number\n  event: VEventParsed\n  columnCount: number\n  column: number\n}\n\ninterface VDaySlotScope extends VTimestamp {\n  outside: boolean\n  index: number\n}\n\ninterface VDayBodySlotScope extends VDaySlotScope {\n  timeToY: VTimeToY\n}\n\n/* @vue/component */\nexport default CalendarBase.extend({\n  name: 'calendar-with-events',\n\n  props: props.events,\n\n  computed: {\n    noEvents (): boolean {\n      return this.events.length === 0\n    },\n    parsedEvents (): VEventParsed[] {\n      return this.events.map((input, index) => parseEvent(input, index, this.eventStart, this.eventEnd))\n    },\n    eventColorFunction (): VColorFunction {\n      return typeof this.eventColor === 'function'\n        ? this.eventColor as VColorFunction\n        : () => (this.eventColor as string)\n    },\n    eventTextColorFunction (): VColorFunction {\n      return typeof this.eventTextColor === 'function'\n        ? this.eventTextColor as VColorFunction\n        : () => (this.eventTextColor as string)\n    },\n    eventNameFunction (): VNameFunction {\n      return typeof this.eventName === 'function'\n        ? this.eventName as VNameFunction\n        : (event, timedEvent) => {\n          const name = event.input[this.eventName as string] as string\n          if (event.start.hasTime) {\n            if (timedEvent) {\n              const showStart = event.start.hour < 12 && event.end.hour >= 12\n              const start = this.formatTime(event.start, showStart)\n              const end = this.formatTime(event.end, true)\n              return `<strong>${name}</strong><br>${start} - ${end}`\n            } else {\n              const time = this.formatTime(event.start, true)\n              return `<strong>${time}</strong> ${name}`\n            }\n          }\n          return name\n        }\n    },\n  },\n\n  methods: {\n    formatTime (withTime: VTimestamp, ampm: boolean): string {\n      const suffix = ampm ? (withTime.hour < 12 ? 'a' : 'p') : ''\n      const hour = withTime.hour % 12 || 12\n      const minute = withTime.minute\n\n      return minute > 0\n        ? (minute < 10\n          ? `${hour}:0${minute}${suffix}`\n          : `${hour}:${minute}${suffix}`)\n        : `${hour}${suffix}`\n    },\n    updateEventVisibility () {\n      if (this.noEvents || !this.eventMore) {\n        return\n      }\n\n      const eventHeight = this.eventHeight\n      const eventsMap = this.getEventsMap()\n\n      for (const date in eventsMap) {\n        const { parent, events, more } = eventsMap[date]\n        if (!more) {\n          break\n        }\n        const parentBounds = parent.getBoundingClientRect()\n        const last = events.length - 1\n        let hide = false\n        let hidden = 0\n        for (let i = 0; i <= last; i++) {\n          if (!hide) {\n            const eventBounds = events[i].getBoundingClientRect()\n            hide = eventBounds.bottom + eventHeight > parentBounds.bottom && i !== last\n          }\n          if (hide) {\n            const id = events[i].getAttribute('data-event') as string\n            this.hideEvents(id)\n            hidden++\n          }\n        }\n\n        if (hide) {\n          more.style.display = ''\n          more.innerHTML = this.$vuetify.lang.t(this.eventMoreText, hidden)\n        } else {\n          more.style.display = 'none'\n        }\n      }\n    },\n    hideEvents (id: string) {\n      const elements = this.$refs.events as HTMLElement[]\n\n      elements.forEach(el => {\n        if (el.getAttribute('data-event') === id) {\n          el.style.display = 'none'\n        }\n      })\n    },\n    getEventsMap (): VDailyEventsMap {\n      const eventsMap: VDailyEventsMap = {}\n      const elements = this.$refs.events as HTMLElement[]\n\n      if (!elements || !elements.forEach) {\n        return eventsMap\n      }\n\n      elements.forEach(el => {\n        const date = el.getAttribute('data-date')\n        if (el.parentElement && date) {\n          if (!(date in eventsMap)) {\n            eventsMap[date] = {\n              parent: el.parentElement,\n              more: null,\n              events: [],\n            }\n          }\n          if (el.getAttribute('data-more')) {\n            eventsMap[date].more = el\n          } else {\n            eventsMap[date].events.push(el)\n            el.style.display = ''\n          }\n        }\n      })\n\n      return eventsMap\n    },\n    genDayEvent ({ offset, event }: VEventVisual, index: number, day: VDaySlotScope): VNode {\n      const eventHeight = this.eventHeight\n      const eventMarginBottom = this.eventMarginBottom\n      const relativeOffset = (offset - index) * (eventHeight + eventMarginBottom) // 1 = margin bottom\n      const dayIdentifier = getDayIdentifier(day)\n      const start = dayIdentifier === event.startIdentifier\n      const end = dayIdentifier === event.endIdentifier\n      const scope = { event: event.input, day, outside: day.outside, start, end, timed: false }\n\n      return this.genEvent(event, scope, start || day.index === 0, false, {\n        staticClass: 'v-event',\n        class: {\n          'v-event-start': start,\n          'v-event-end': end,\n        },\n        style: {\n          height: `${eventHeight}px`,\n          top: `${relativeOffset}px`,\n          'margin-bottom': `${eventMarginBottom}px`,\n        },\n        attrs: {\n          'data-date': day.date,\n          'data-event': event.index,\n        },\n        key: event.index,\n        ref: 'events',\n        refInFor: true,\n      })\n    },\n    genTimedEvent ({ offset, event, columnCount, column }: VEventVisual, index: number, day: VDayBodySlotScope): VNode {\n      const dayIdentifier = getDayIdentifier(day)\n      const start = event.startIdentifier >= dayIdentifier\n      const end = event.endIdentifier > dayIdentifier\n      const top = start ? day.timeToY(event.start) : 0\n      const bottom = end ? day.timeToY(1440) : day.timeToY(event.end)\n      const height = Math.max(this.eventHeight, bottom - top)\n      const left = columnCount === -1\n        ? offset * 5\n        : column * 100 / columnCount\n      const right = columnCount === -1\n        ? 0\n        : Math.max(0, (columnCount - column - 2) * 100 / columnCount + 10)\n      const scope = { event: event.input, day, outside: day.outside, start, end, timed: true }\n\n      return this.genEvent(event, scope, true, true, {\n        staticClass: 'v-event-timed',\n        style: {\n          top: `${top}px`,\n          height: `${height}px`,\n          left: `${left}%`,\n          right: `${right}%`,\n        },\n      })\n    },\n    genEvent (event: VEventParsed, scope: object, showName: boolean, timedEvent: boolean, data: VNodeData): VNode {\n      const slot = this.$scopedSlots.event\n      const text = this.eventTextColorFunction(event.input)\n      const background = this.eventColorFunction(event.input)\n\n      return this.$createElement('div',\n        this.setTextColor(text,\n          this.setBackgroundColor(background, {\n            on: this.getDefaultMouseEventHandlers(':event', nativeEvent => ({ ...scope, nativeEvent })),\n            directives: [{\n              name: 'ripple',\n              value: this.eventRipple != null ? this.eventRipple : true,\n            }],\n            ...data,\n          })\n        ), slot\n          ? slot(scope)\n          : (showName ? [this.genName(event, timedEvent)] : undefined)\n      )\n    },\n    genName (event: VEventParsed, timedEvent: boolean): VNode {\n      return this.$createElement('div', {\n        staticClass: 'pl-1',\n        domProps: {\n          innerHTML: this.eventNameFunction(event, timedEvent),\n        },\n      })\n    },\n    genMore (day: VTimestamp): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-event-more pl-1',\n        attrs: {\n          'data-date': day.date,\n          'data-more': 1,\n        },\n        directives: [{\n          name: 'ripple',\n          value: this.eventRipple != null ? this.eventRipple : true,\n        }],\n        on: {\n          click: () => this.$emit('click:more', day),\n        },\n        style: {\n          display: 'none',\n        },\n        ref: 'events',\n        refInFor: true,\n      })\n    },\n    getEventsForDay (day: VTimestamp): VEventParsed[] {\n      const identifier = getDayIdentifier(day)\n\n      return this.parsedEvents.filter(\n        event => isEventOn(event, identifier)\n      )\n    },\n    getEventsForDayAll (day: VTimestamp): VEventParsed[] {\n      const identifier = getDayIdentifier(day)\n\n      return this.parsedEvents.filter(\n        event => event.allDay && isEventOn(event, identifier)\n      )\n    },\n    getEventsForDayTimed (day: VTimestamp): VEventParsed[] {\n      const identifier = getDayIdentifier(day)\n\n      return this.parsedEvents.filter(\n        event => !event.allDay && isEventOn(event, identifier)\n      )\n    },\n    isSameColumn (a: VEventVisual, b: VEventVisual): boolean {\n      const astart = parseTime(a.event.start) as number\n      const bstart = parseTime(b.event.start) as number\n      const diff = astart - bstart\n      const abs = diff < 0 ? -diff : diff\n\n      return abs < this.eventOverlapThreshold\n    },\n    isOverlapping (a: VEventVisual, b: VEventVisual): boolean {\n      const astart = parseTime(a.event.start) as number\n      const bstart = parseTime(b.event.start) as number\n\n      if (a.offset < b.offset && bstart < astart) {\n        const aend = astart + this.eventOverlapThreshold\n        const bend = parseTime(b.event.end) as number\n        return !(astart >= bend || aend <= bstart)\n      }\n\n      return false\n    },\n    getScopedSlots () {\n      if (this.noEvents) {\n        return this.$scopedSlots\n      }\n\n      /**\n       * Over the span of a week (for example) we want to maintain an event in the same row (for weekly and monthly views).\n       * We keep track of those rows by indexToOffset. If the value in that array is -1, then we can place an event at that spot.\n       * For a daily view with timed events we arrange them based on columns and offsets. If two or more events start at around the\n       * same time (eventOverlapThreshold) they go into columns. If one event starts inside another it is indented the appropriate amount.\n       * If one event overlaps another after those adjustments are made those events are placed in columns together instead of any defined\n       * indents.\n       */\n\n      const parsedEvents = this.parsedEvents\n      const indexToOffset: number[] = parsedEvents.map(event => -1)\n      const resetOnWeekday = this.weekdays[0]\n\n      const checkReset: VEventResetCheck = day => {\n        if (day.weekday === resetOnWeekday) {\n          for (let i = 0; i < indexToOffset.length; i++) {\n            indexToOffset[i] = -1\n          }\n        }\n      }\n\n      const getOffset: VEventVisualGetOffset = (visual, visuals) => {\n        let offset = indexToOffset[ visual.event.index ]\n        if (offset === -1) {\n          let min = Number.MAX_SAFE_INTEGER\n          let max = -1\n          visuals.forEach(other => {\n            const otherOffset = indexToOffset[ other.event.index ]\n            if (otherOffset !== -1) {\n              min = Math.min(min, otherOffset)\n              max = Math.max(max, otherOffset)\n            }\n          })\n          offset = min > 0 && max !== -1 ? min - 1 : max + 1\n          indexToOffset[ visual.event.index ] = offset\n        }\n        return offset\n      }\n\n      const getVisuals: VEventVisualGetter = (events, timed) => {\n        const visuals: VEventVisual[] = events.map(event => ({ event, offset: 0, columnCount: -1, column: -1 }))\n        // sort events by start date/time\n        visuals.sort((a, b) => a.event.startTimestampIdentifier - b.event.startTimestampIdentifier)\n        if (timed) {\n          // timed events can be organized into columns\n          visuals.forEach(visual => {\n            if (visual.columnCount !== -1) {\n              return\n            }\n            const columns: VEventVisual[] = []\n            visuals.forEach(other => {\n              if (other.columnCount === -1 && this.isSameColumn(visual, other)) {\n                columns.push(other)\n              }\n            })\n            if (columns.length > 1) {\n              columns.forEach((visual, visualIndex) => {\n                visual.column = visualIndex\n                visual.columnCount = columns.length\n              })\n            }\n          })\n          // for any not organized into columns, if they overlap another event\n          // not in a column they are offset\n          visuals.forEach(visual => {\n            if (visual.columnCount === -1) {\n              visuals.forEach(other => {\n                const otherOffset = indexToOffset[ other.event.index ]\n                if (otherOffset !== -1 && other.event.endTimestampIdentifier <= visual.event.startTimestampIdentifier) {\n                  indexToOffset[ other.event.index ] = -1\n                }\n              })\n              visual.offset = getOffset(visual, visuals)\n            }\n          })\n          // for any not organized into columns, if a previous event overlaps this event\n          // join them into the columns\n          visuals.forEach(visual => {\n            if (visual.columnCount === -1) {\n              const columns: VEventVisual[] = [visual]\n              visuals.forEach(other => {\n                if (other !== visual && other.columnCount === -1 && this.isOverlapping(visual, other)) {\n                  columns.push(other)\n                }\n              })\n              if (columns.length > 1) {\n                columns.forEach((visual, visualIndex) => {\n                  visual.column = visualIndex\n                  visual.columnCount = columns.length\n                })\n              }\n            }\n          })\n        } else {\n          visuals.forEach(visual => {\n            visual.offset = getOffset(visual, visuals)\n          })\n        }\n        visuals.sort((a, b) => (a.column - b.column) || (a.offset - b.offset))\n        return visuals\n      }\n\n      const getSlotChildren = <D extends VDaySlotScope>(day: D, getter: VEventGetter, mapper: VEventVisualToNode<D>, timed: boolean) => {\n        checkReset(day)\n        const events = getter(day)\n        return events.length === 0\n          ? undefined\n          : getVisuals(events, timed).map((visual, index) => mapper(visual, index, day))\n      }\n\n      return {\n        ...this.$scopedSlots,\n        day: (day: VDaySlotScope) => {\n          const children = getSlotChildren(day, this.getEventsForDay, this.genDayEvent, false)\n          if (children && children.length > 0 && this.eventMore) {\n            children.push(this.genMore(day))\n          }\n          return children\n        },\n        'day-header': (day: VDaySlotScope) => {\n          return getSlotChildren(day, this.getEventsForDayAll, this.genDayEvent, false)\n        },\n        'day-body': (day: VDayBodySlotScope) => {\n          return [this.$createElement('div', {\n            staticClass: 'v-event-timed-container',\n          }, getSlotChildren(day, this.getEventsForDayTimed, this.genTimedEvent, true))]\n        },\n      }\n    },\n  },\n})\n"],"sourceRoot":""}