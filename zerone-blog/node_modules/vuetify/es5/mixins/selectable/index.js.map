{"version":3,"sources":["../../../src/mixins/selectable/index.ts"],"names":[],"mappings":";;;;;;AACA;;;;AAGA;;;;AACA;;;;AAGA;;;;;;AAEA;;kBACe,sBACb,gBADa,EAEb,oBAFa,EAGb,oBAHa,EAIb,MAJa,CAIN;AACP,UAAM,YADC;AAGP,WAAO;AACL,cAAM,YADD;AAEL,eAAO;AAFF,KAHA;AAQP,WAAO;AACL,eAAO;AACL,kBAAM,MADD;AAEL,qBAAS;AAFJ,SADF;AAKL,YAAI,MALC;AAML,oBAAY,IANP;AAOL,oBAAY,IAPP;AAQL,mBAAW,IARN;AASL,kBAAU;AACR,kBAAM,OADE;AAER,qBAAS;AAFD,SATL;AAaL,eAAO;AAbF,KARA;AAwBP,QAxBO,kBAwBH;AACF,eAAO;AACL,uBAAW,KAAK;AADX,SAAP;AAGD,KA5BM;;AA8BP,cAAU;AACR,qBADQ,2BACK;AACX,mBAAO,KAAK,QAAL,GAAgB,KAAK,KAArB,GAA6B,KAAK,eAAzC;AACD,SAHO;AAIR,kBAJQ,wBAIE;AACR,mBAAO,KAAK,QAAL,KAAkB,IAAlB,IAA2B,KAAK,QAAL,KAAkB,IAAlB,IAA0B,MAAM,OAAN,CAAc,KAAK,aAAnB,CAA5D;AACD,SANO;AAOR,gBAPQ,sBAOA;AAAA;;AACN,gBAAM,QAAQ,KAAK,KAAnB;AACA,gBAAM,QAAQ,KAAK,aAAnB;AAEA,gBAAI,KAAK,UAAT,EAAqB;AACnB,oBAAI,CAAC,MAAM,OAAN,CAAc,KAAd,CAAL,EAA2B,OAAO,KAAP;AAE3B,uBAAO,MAAM,IAAN,CAAW;AAAA,2BAAQ,MAAK,eAAL,CAAqB,IAArB,EAA2B,KAA3B,CAAR;AAAA,iBAAX,CAAP;AACD;AAED,gBAAI,KAAK,SAAL,KAAmB,SAAnB,IAAgC,KAAK,UAAL,KAAoB,SAAxD,EAAmE;AACjE,uBAAO,QACH,KAAK,eAAL,CAAqB,KAArB,EAA4B,KAA5B,CADG,GAEH,QAAQ,KAAR,CAFJ;AAGD;AAED,mBAAO,KAAK,eAAL,CAAqB,KAArB,EAA4B,KAAK,SAAjC,CAAP;AACD,SAxBO;AAyBR,eAzBQ,qBAyBD;AACL,mBAAO,KAAK,QAAZ;AACD;AA3BO,KA9BH;AA4DP,WAAO;AACL,kBADK,sBACO,GADP,EACU;AACb,iBAAK,SAAL,GAAiB,GAAjB;AACD;AAHI,KA5DA;AAkEP,aAAS;AACP,gBADO,sBACC;AACN,gBAAM,QAAQ,iBAAO,OAAP,CAAe,OAAf,CAAuB,QAAvB,CAAgC,IAAhC,CAAqC,IAArC,CAAd;AAEA,gBAAI,CAAC,KAAL,EAAY,OAAO,KAAP;AAEZ,kBAAO,IAAP,CAAa,EAAb,GAAkB,EAAE,OAAO,KAAK,QAAd,EAAlB;AAEA,mBAAO,KAAP;AACD,SATM;AAUP,gBAVO,oBAUG,IAVH,EAUiB,KAVjB,EAU8B;AACnC,mBAAO,KAAK,cAAL,CAAoB,OAApB,EAA6B;AAClC,uBAAO,OAAO,MAAP,CAAc;AACnB,oCAAgB,KAAK,QAAL,CAAc,QAAd,EADG;AAEnB,8BAAU,KAAK,UAFI;AAGnB,wBAAI,KAAK,UAHU;AAInB,0BAAM,IAJa;AAKnB;AALmB,iBAAd,EAMJ,KANI,CAD2B;AAQlC,0BAAU;AACR,2BAAO,KAAK,KADJ;AAER,6BAAS,KAAK;AAFN,iBARwB;AAYlC,oBAAI;AACF,0BAAM,KAAK,MADT;AAEF,4BAAQ,KAAK,QAFX;AAGF,2BAAO,KAAK,OAHV;AAIF,6BAAS,KAAK;AAJZ,iBAZ8B;AAkBlC,qBAAK;AAlB6B,aAA7B,CAAP;AAoBD,SA/BM;AAgCP,cAhCO,oBAgCD;AACJ,iBAAK,SAAL,GAAiB,KAAjB;AACD,SAlCM;AAmCP,gBAnCO,sBAmCC;AAAA;;AACN,gBAAI,KAAK,UAAT,EAAqB;AAErB,gBAAM,QAAQ,KAAK,KAAnB;AACA,gBAAI,QAAQ,KAAK,aAAjB;AAEA,gBAAI,KAAK,UAAT,EAAqB;AACnB,oBAAI,CAAC,MAAM,OAAN,CAAc,KAAd,CAAL,EAA2B;AACzB,4BAAQ,EAAR;AACD;AAED,oBAAM,SAAS,MAAM,MAArB;AAEA,wBAAQ,MAAM,MAAN,CAAa,UAAC,IAAD;AAAA,2BAAe,CAAC,OAAK,eAAL,CAAqB,IAArB,EAA2B,KAA3B,CAAhB;AAAA,iBAAb,CAAR;AAEA,oBAAI,MAAM,MAAN,KAAiB,MAArB,EAA6B;AAC3B,0BAAM,IAAN,CAAW,KAAX;AACD;AACF,aAZD,MAYO,IAAI,KAAK,SAAL,KAAmB,SAAnB,IAAgC,KAAK,UAAL,KAAoB,SAAxD,EAAmE;AACxE,wBAAQ,KAAK,eAAL,CAAqB,KAArB,EAA4B,KAAK,SAAjC,IAA8C,KAAK,UAAnD,GAAgE,KAAK,SAA7E;AACD,aAFM,MAEA,IAAI,KAAJ,EAAW;AAChB,wBAAQ,KAAK,eAAL,CAAqB,KAArB,EAA4B,KAA5B,IAAqC,IAArC,GAA4C,KAApD;AACD,aAFM,MAEA;AACL,wBAAQ,CAAC,KAAT;AACD;AAED,iBAAK,QAAL,CAAc,IAAd,EAAoB,KAApB;AACA,iBAAK,aAAL,GAAqB,KAArB;AACD,SA/DM;AAgEP,eAhEO,qBAgEA;AACL,iBAAK,SAAL,GAAiB,IAAjB;AACD,SAlEM;;AAmEP;AACA,iBApEO,qBAoEI,CApEJ,EAoEY,CAAI;AApEhB;AAlEF,CAJM,C;AAJf;;AAJA","sourcesContent":["// Components\nimport VInput from '../../components/VInput'\n\n// Mixins\nimport Rippleable from '../rippleable'\nimport Comparable from '../comparable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(\n  VInput,\n  Rippleable,\n  Comparable\n).extend({\n  name: 'selectable',\n\n  model: {\n    prop: 'inputValue',\n    event: 'change',\n  },\n\n  props: {\n    color: {\n      type: String,\n      default: 'accent',\n    },\n    id: String,\n    inputValue: null as any,\n    falseValue: null as any,\n    trueValue: null as any,\n    multiple: {\n      type: Boolean,\n      default: null,\n    },\n    label: String,\n  },\n\n  data () {\n    return {\n      lazyValue: this.inputValue,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      return this.isActive ? this.color : this.validationState\n    },\n    isMultiple (): boolean {\n      return this.multiple === true || (this.multiple === null && Array.isArray(this.internalValue))\n    },\n    isActive (): boolean {\n      const value = this.value\n      const input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false\n\n        return input.some(item => this.valueComparator(item, value))\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value\n          ? this.valueComparator(value, input)\n          : Boolean(input)\n      }\n\n      return this.valueComparator(input, this.trueValue)\n    },\n    isDirty (): boolean {\n      return this.isActive\n    },\n  },\n\n  watch: {\n    inputValue (val) {\n      this.lazyValue = val\n    },\n  },\n\n  methods: {\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label!.data!.on = { click: this.onChange }\n\n      return label\n    },\n    genInput (type: string, attrs: object) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type,\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive,\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown,\n        },\n        ref: 'input',\n      })\n    },\n    onBlur () {\n      this.isFocused = false\n    },\n    onChange () {\n      if (this.isDisabled) return\n\n      const value = this.value\n      let input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = []\n        }\n\n        const length = input.length\n\n        input = input.filter((item: any) => !this.valueComparator(item, value))\n\n        if (input.length === length) {\n          input.push(value)\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value\n      } else {\n        input = !input\n      }\n\n      this.validate(true, input)\n      this.internalValue = input\n    },\n    onFocus () {\n      this.isFocused = true\n    },\n    /** @abstract */\n    onKeydown (e: Event) {},\n  },\n})\n"],"sourceRoot":""}